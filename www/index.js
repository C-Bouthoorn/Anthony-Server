// Generated by CoffeeScript 1.10.0
/*jshint jquery: true*///;
/*globals io:false, console:false *///;
'use strict';
var init, initchat, login, register, safe, sessionid, setstatus, socket;

socket = null;

sessionid = null;

setstatus = function(stat, subscr, iserror) {
  var elem, html;
  if (typeof subscr !== 'string') {
    iserror = subscr;
    subscr = '';
  }
  elem = $('#connstatus');
  html = stat + '<br><small>' + subscr + '</small>';
  elem.html(html);
  if (iserror) {
    return elem.addClass('error');
  } else {
    return elem.removeClass('error');
  }
};

safe = function(callback) {
  var err, error;
  try {
    return callback();
  } catch (error) {
    err = error;
    console.log(err);
    return setstatus(err.message, true);
  }
};

init = function() {
  return safe(function() {
    socket = io.connect();
    socket.on('connect', function() {
      return setstatus('Connected to the server!');
    });
    socket.on('setid', function(data) {
      return sessionid = data.sessionid;
    });
    socket.on('disconnect', function() {
      return setstatus('Lost connection!', true);
    });
    return $('#password').keyup(function(event) {
      if (event.keyCode === 13) {
        return $('#btn').click();
      }
    });
  });
};

initchat = function() {
  socket.on('chat-data', function(data) {
    var html;
    html = data.html;
    $('body').html(html);
    $('#msgbox').keyup(function(event) {
      var message;
      if (event.keyCode === 13) {
        message = $('#msgbox').val();
        $('#msgbox').val('');
        return socket.emit('client-send-message', {
          sessionid: sessionid,
          message: message
        });
      }
    });
    return socket.on('client-receive-message', function(data) {
      var message, user;
      user = data.user;
      message = data.message;
      return $('#chatbox').append("<span class='user " + user.type + "'>" + user.name + ": <span class='message'>" + message + "</span></span><br>");
    });
  });
  return socket.emit('get-chat-data', {});
};

login = function() {
  return safe(function() {
    var pass, user;
    user = $('#username').val();
    pass = $('#password').val();
    socket.on('login-complete', function(data) {
      setstatus("Welcome " + user + "!");
      return initchat();
    });
    socket.on('login-failed', function(data) {
      return setstatus('Failed to login:', data.error, true);
    });
    return socket.emit('login', {
      user: user,
      pass: pass
    });
  });
};

register = function() {
  return safe(function() {
    var pass, user;
    user = $('#username').val();
    pass = $('#password').val();
    socket.on('register-complete', function(data) {
      return setstatus("Welcome to our server, " + user + " !");
    });
    socket.on('register-failed', function(data) {
      return setstatus('Failed to register', data.error, true);
    });
    return socket.emit('register', {
      user: user,
      pass: pass
    });
  });
};
